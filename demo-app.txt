curl -fsSL https://start.spring.io/starter.tgz \
  -d dependencies=web,actuator,prometheus \
  -d bootVersion=2.7.6 \
  -d javaVersion=11 \
  -d packageName=com.example \
  -d groupId=com.example \
  -d artifactId=demo-app \
  -d baseDir=demo-app \
  -d type=gradle-project | tar -xzvf -


# Hello
cat <<'EOF'> demo-app/src/main/java/com/example/Hello.java
package com.example;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;
@RestController
public class Hello {
	@GetMapping("/")
	public String index() {
		return "Hello from Spring Boot!";
	}
}
EOF

# Actuator Prometheus Metrics
cat <<'EOF'> demo-app/src/main/resources/application.properties
server.port=8080
management.server.port=8081
management.endpoints.web.exposure.include=info,health,prometheus
EOF

# Rename jar file
cat <<'EOF'>> demo-app/build.gradle
bootJar {
  archiveFileName = 'app.jar'
}
EOF

# Dockerfile
cat <<'EOF'> demo-app/Dockerfile
FROM eclipse-temurin:11-jdk AS builder
WORKDIR workspace
COPY . .
ARG JAR_FILE=build/libs/app.jar
ARG GRADLE_USER_HOME=/tmp/build_cache/gradle
RUN --mount=type=cache,target=/tmp/build_cache/gradle \
    set -ex \
    && chmod +x gradlew \
    && ./gradlew build -i \
    && java -Djarmode=layertools -jar $JAR_FILE extract
FROM eclipse-temurin:11-jre
USER 999:0
WORKDIR workspace
COPY --from=builder workspace/dependencies/ ./
COPY --from=builder workspace/spring-boot-loader/ ./
COPY --from=builder workspace/snapshot-dependencies/ ./
COPY --from=builder workspace/application/ ./
ENTRYPOINT ["java", "org.springframework.boot.loader.JarLauncher"]
EOF


# Build
docker build -t demo-app demo-app/ --progress=plain

# Run Demo App
docker run -it --rm -p 8080:8080 -p 8081:8081 demo-app
curl localhost:8080
curl localhost:8081/actuator/health


# Push Demo App to KinD Registry
kubectl port-forward deployment/registry 32000:5000
docker tag demo-app:latest localhost:32000/demo-app:latest
docker push localhost:32000/demo-app:latest

# Deploy Demo App
kubectl apply -f deployment.yaml
kubectl logs deployments/demo-app -f

# Test
curl -fsSL demo-app.172.19.0.1.sslip.io

firefox grafana.172.19.0.1.sslip.io
